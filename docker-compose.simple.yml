version: '3.8'

# =====================================
# NEON MURER CMS - EINFACHSTES DEPLOYMENT
# =====================================
# Nutzt fertiges Node Image + git clone

services:
  # =====================================
  # MAIN APPLICATION
  # =====================================
  app:
    image: node:18-alpine
    container_name: neon-murer-cms
    working_dir: /app
    ports:
      - "3835:3835"
    environment:
      - NODE_ENV=production
      - PORT=3835
      - DATABASE_URL=postgresql://neon_user:neon_secure_password_2024@db:5432/neon_murer_cms
      - REDIS_URL=redis://redis:6379
      - JWT_SECRET=xgI2MNdFDPbViz5IPEqBp/8IYqgzNnM0tXfVDnq+r5szkS6Qxdy1r/oJoKYLzKuL
      - ADMIN_EMAIL=admin@neonmurer.ch
      - ADMIN_PASSWORD=admin123
      - ADMIN_NAME=Administrator
      - FRONTEND_URL=http://localhost:3835
      - ALLOWED_ORIGINS=http://localhost:3835,http://127.0.0.1:3835
      - BCRYPT_ROUNDS=12
      - MAX_FILE_SIZE=50mb
      - ANALYTICS_ENABLED=true
      - LOG_LEVEL=info
      - LOG_TO_FILE=true
      - RATE_LIMIT_WINDOW_MS=900000
      - RATE_LIMIT_MAX_REQUESTS=1000
      - AUTH_RATE_LIMIT_MAX=5
      - HEALTH_CHECK_ENABLED=true
      - METRICS_ENABLED=true
      - HTTPS_ENABLED=false
      - UPLOAD_DIR=/app/uploads
      - MAX_JSON_SIZE=10mb
      - MAX_URL_ENCODED_SIZE=10mb
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - app_content:/app/content
      - app_uploads:/app/uploads
      - app_logs:/app/logs
    networks:
      - neon-network
    restart: unless-stopped
    command: >
      sh -c "
      apk add --no-cache git curl openssl &&
      git clone https://github.com/crypticbae/neon-murer-cms.git . &&
      npm install &&
      npx prisma generate &&
      npm start
      "
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3835/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 120s

  # =====================================
  # POSTGRESQL DATABASE
  # =====================================
  db:
    image: postgres:15-alpine
    container_name: neon-murer-db
    environment:
      POSTGRES_DB: neon_murer_cms
      POSTGRES_USER: neon_user
      POSTGRES_PASSWORD: neon_secure_password_2024
      POSTGRES_INITDB_ARGS: "--encoding=UTF8 --locale=C"
      PGDATA: /var/lib/postgresql/data/pgdata
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - neon-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U neon_user -d neon_murer_cms"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

  # =====================================
  # REDIS CACHE
  # =====================================
  redis:
    image: redis:7-alpine
    container_name: neon-murer-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - neon-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 3s
      retries: 3
      start_period: 10s
    command: >
      redis-server 
      --appendonly yes 
      --appendfsync everysec 
      --maxmemory 512mb 
      --maxmemory-policy allkeys-lru

  # =====================================
  # DATABASE INITIALIZATION
  # =====================================
  db-init:
    image: node:18-alpine
    container_name: neon-murer-init
    working_dir: /app
    environment:
      - NODE_ENV=production
      - DATABASE_URL=postgresql://neon_user:neon_secure_password_2024@db:5432/neon_murer_cms
      - ADMIN_EMAIL=admin@neonmurer.ch
      - ADMIN_PASSWORD=admin123
      - ADMIN_NAME=Administrator
      - JWT_SECRET=xgI2MNdFDPbViz5IPEqBp/8IYqgzNnM0tXfVDnq+r5szkS6Qxdy1r/oJoKYLzKuL
    depends_on:
      db:
        condition: service_healthy
    networks:
      - neon-network
    restart: "no"
    command: >
      sh -c "
      apk add --no-cache git &&
      git clone https://github.com/crypticbae/neon-murer-cms.git . &&
      npm install &&
      echo 'Waiting for database...' &&
      sleep 30 &&
      echo 'Running Prisma migrations...' &&
      npx prisma migrate deploy &&
      echo 'Generating Prisma client...' &&
      npx prisma generate &&
      echo 'Seeding database...' &&
      npm run seed &&
      echo 'Database initialization completed!'
      "

# =====================================
# NETWORKS
# =====================================
networks:
  neon-network:
    driver: bridge

# =====================================
# PERSISTENT VOLUMES
# =====================================
volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local
  app_content:
    driver: local
  app_uploads:
    driver: local
  app_logs:
    driver: local
